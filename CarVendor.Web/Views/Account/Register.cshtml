@model CarVendor.Web.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>RegisterViewModel</h4>
    <hr />


    <div class="form-group">
        <div class="col-md-5">
            Individual
            @Html.RadioButtonFor(model => model.Individually, 1, htmlAttributes: new { @class = "control-label col-md-2", @onclick = "CustomerType(1)", @required = true })
            Corporate
            @Html.RadioButtonFor(model => model.Individually, 2, htmlAttributes: new { @class = "control-label col-md-2", @onclick = "CustomerType(2)", @required = true })
        </div>
        <div class="col-md-10">

            @Html.ValidationMessageFor(model => model.Individually, "", new { @class = "text-danger" })
        </div>
    </div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @if (Model != null && Model.Individually == 2)
    {
        <div class="form-group row">

            <div class="CorporateDev col-md-4" style="display:block">
                @Html.LabelFor(model => model.CorporateName, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CorporateName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CorporateName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="CorporateDev  col-md-4" style="display:block">
                @Html.LabelFor(model => model.CorporateSite, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CorporateSite, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CorporateSite, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="CorporateDev  col-md-4" style="display:block">
                @Html.LabelFor(model => model.RegistrationNo, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.RegistrationNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RegistrationNo, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    }
    else
    {
        <div class="form-group row">

            <div class="CorporateDev col-md-4" style="display:none">
                @Html.LabelFor(model => model.CorporateName, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CorporateName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CorporateName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="CorporateDev  col-md-4" style="display:none">
                @Html.LabelFor(model => model.CorporateSite, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CorporateSite, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CorporateSite, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="CorporateDev  col-md-4" style="display:none">
                @Html.LabelFor(model => model.RegistrationNo, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.RegistrationNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RegistrationNo, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    }

    <div class="form-group row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.FName, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="col-md-4">
            @Html.LabelFor(model => model.MName, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.MName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.LName, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.LName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            @Html.LabelFor(model => model.NationalId, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.NationalId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NationalId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.MainAddress, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.MainAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MainAddress, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            @Html.LabelFor(model => model.DeliveryAddress, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.DeliveryAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeliveryAddress, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="form-group row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input class="acceptPolicyCheckbox" onclick="acceptPolicy()" type="checkbox" id="acceptPolicyCheckbox" value="accept" name="accept"> I accept this legal agreements: <a  target="_blank" rel="noopener noreferrer" href="/MainInfo/Privacypolicy"> Privacy Policy </a> , <a  target="_blank" rel="noopener noreferrer" href="/maininfo/termsofservice">Terms of Service</a>
        </div>
    </div>
 
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input disabled type="submit" value="Create" class="btn btn-success" id="createButton" />
            </div>
        </div>
   
    

</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    <script>
        function acceptPolicy() {
            var checked = document.getElementById("acceptPolicyCheckbox").checked;

            if (checked) {

                document.getElementById("createButton").disabled = false;
            }
            else {
                document.getElementById("createButton").disabled = true;

            }
        }
    </script>